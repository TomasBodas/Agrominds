@model IEnumerable<Services.Models.Log>

@{
    ViewBag.Title = "Bitacora";
    Services.Idioma.Translator translator = new Services.Idioma.Translator();
    UAIDesarrolloArquitectura.Controllers.IdiomaController lC = new UAIDesarrolloArquitectura.Controllers.IdiomaController();
    lC.InitializeController();
    Services.LanguageService service = lC.GetService();
    service.Susbcribe(translator);
    if (Services.SessionManager.IsLogged())
    {
        service.ChangeLanguage((Services.SessionManager.GetInstance.User.LanguageId).ToString());
    }
    else
    {
        if (!service.SelectedLanguageExists()) { service.ChangeLanguage("1"); }
    }
}

<!DOCTYPE html>

<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bitácora</title>
    <link rel="stylesheet" href="~/Content/Site.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Chivo:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
    <style>
        .contenedor-tabla {
            max-height: 550px;
            overflow-y: auto;
            border: 1px solid #a5d6a7; /* Verde suave */
            background-color: #f9fdf9;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(46, 125, 50, 0.1);
            padding: 10px;
        }

        table {
            width: 80%;
            margin: auto;
            border-collapse: collapse;
            font-family: "Chivo", Arial, sans-serif;
        }

        th, td {
            padding: 10px;
            text-align: left;
            border-bottom: 1px solid #c8e6c9; /* Verde claro */
            color: #1b5e20; /* Verde oscuro */
        }

        th {
            background-color: #e8f5e9; /* Fondo verde muy claro */
            color: #2e7d32; /* Verde institucional */
            font-weight: 700;
            text-transform: uppercase;
        }

        tr:hover {
            background-color: #f1f8e9; /* Verde tenue en hover */
            transition: background-color 0.3s ease;
        }

        .contenedor-filtros {
            display: flex;
            justify-content: center;
            align-content: center;
            flex-wrap: wrap;
            gap: 10px;
            margin: 15px 0 25px; /* add space below filters */
        }

        .boton {
            width: auto;
            padding: 8px 14px;
            background-color: #2e7d32; /* Verde principal */
            color: white;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-weight: 600;
            transition: background-color 0.3s ease, transform 0.1s ease;
        }

            .boton:hover {
                background-color: #1b5e20;
                transform: translateY(-1px);
            }

            .boton:disabled {
                background-color: #a5d6a7;
                cursor: not-allowed;
            }

        footer {
            position: fixed;
            bottom: 0;
            left: 0;
            width: 100%;
            background-color: #2e7d32; /* Verde institucional */
            color: white;
            padding: 12px;
            text-align: center;
            font-size: 14px;
            box-shadow: 0 -2px 6px rgba(0, 0, 0, 0.1);
        }
    </style>

</head>

<body>
    <nav class="barra">
        @if (Services.SessionManager.IsLogged())
        {
            <div class="opciones">
                <a href="@Url.Action("Logout", "Home")">@translator.GetTraduction(service, "Logout")</a>
                <a style="display:none;" id="bitacora" href="@Url.Action("Bitacora", "Bitacora")">@translator.GetTraduction(service, "Log")</a>
                <a style="display:none;" id="abmusuarios" href="@Url.Action("ABMUsuarios", "ABM")">@translator.GetTraduction(service, "ManageUser")</a>
                <a style="display:none;" id="restore" href="@Url.Action("BackupRestore", "Backup")">@translator.GetTraduction(service, "Restoredb")</a>
                <a style="display:none;" id="1001" href="@Url.Action("ABMIdioma", "Idioma")">@translator.GetTraduction(service, "ManageLanguage")</a>
                <a style="display:none;" id="crearperfiles" href="@Url.Action("CrearPerfiles", "CrearPerfiles")">@translator.GetTraduction(service, "CreateProfile")</a>
                <a style="display:none;" id="asignarperfiles" href="@Url.Action("AsignarPerfil", "AsignarPerfil")">@translator.GetTraduction(service, "AssignProfile")</a>
                <script type="text/javascript">
                     @foreach (string permission in Services.SessionManager.GetInstance.User.permissionList)
                     {
                         <text>
                             document.getElementById('@permission').style.display = 'block';
                         </text>
                     }
                </script>
            </div>
            <div class="opciones">
                <img src="~/assets/user-image-with-black-background-svgrepo-com.svg" width="30px" />
                <p style='color: black; white-space: nowrap;'>@translator.GetTraduction(service, "Welcome"), @Services.SessionManager.GetInstance.User.Name</p>
            </div>
        }
        else
        {
        <a href="@Url.Action("Login", "Login")">@translator.GetTraduction(service, "Login")</a>
        }
        <form>
            <select id="option" data-language-url="@Url.Action("SetLanguage", "Idioma")" onchange="enviarValor()">
                @foreach (Services.Idioma.Language l in service.GetLanguages())
                {

                    if (service.SelectedLanguage.Id == l.Id)
                    {
                        <option value="@l.Id" selected="selected">@translator.GetTraduction(service, l.Name)</option>
                    }

                    else
                    {
                        <option value="@l.Id">@translator.GetTraduction(service, l.Name)</option>
                    }
                }
            </select>
        </form>
    </nav>
    <header>
        <h1 style="color:#2E7D32;">Agrominds</h1>
    </header>
    <nav class="menu-secundario">
        <a href="@Url.Action("Index", "Home")">@translator.GetTraduction(service, "Main")</a>
        <a href="@Url.Action("Planes", "Home")">@translator.GetTraduction(service, "Plans")</a>
        <a href="@Url.Action("Servicios", "Home")">@translator.GetTraduction(service, "Services")</a>
        <a href="@Url.Action("Nosotros", "Home")">@translator.GetTraduction(service, "AboutUs")</a>
        <a href="@Url.Action("Contacto", "Home")">@translator.GetTraduction(service, "Contact")</a>
    </nav>
    <div class="contenedor-tabla">
        @translator.GetTraduction(service, "Filter"):
        @using (Html.BeginForm("Bitacora", "Bitacora", FormMethod.Post, new { id = "formularioFiltros" }))
        {
            <div class="contenedor-filtros">
                @Html.Label(translator.GetTraduction(service, "Since"))<input type="date" id="fechaInicio" name="fechaInicio" />
                @Html.Label(translator.GetTraduction(service, "Until"))<input type="date" id="fechaFinal" name="fechaFinal" />
                @Html.Label(translator.GetTraduction(service, "Module"))<input type="text" id="modulo " name="modulo" />
                <button type="submit" class="boton">@translator.GetTraduction(service, "FilterText")</button>
                @* Export button at same level as filters *@
                @using (Html.BeginForm("ExportXML", "Bitacora", FormMethod.Post, new { @class = "export-form" }))
                {
                    <button type="submit" class="boton">@translator.GetTraduction(service, "Export")</button>
                }
            </div>
        }
        <table>
            <thead>
                <tr>
                    <th>ID</th>
                    <th>@translator.GetTraduction(service, "User")</th>
                    <th>@translator.GetTraduction(service, "Day")</th>
                    <th>@translator.GetTraduction(service, "Hour")</th>
                    <th>@translator.GetTraduction(service, "Module")</th>
                    <th>@translator.GetTraduction(service, "Description")</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var eventlog in Model)
                {
                    <tr>
                        <td>@eventlog.id</td>
                        <td>@eventlog.User</td>
                        <td>@eventlog.Fecha.ToString().Split(' ')[0]</td>
                        <td>@eventlog.Fecha.ToString().Split(' ')[1]</td>
                        <td>@eventlog.Modulo</td>
                        <td>@eventlog.Descripcion</td>
                    </tr>
                }
            </tbody>
        </table>
        <script src="~/Scripts/scriptIdioma.js"></script>
    </div>
    <footer>
        ©2026 AgroMinds — Tecnología agrícola inteligente. Todos los derechos reservados.
    </footer>
</body>
</html>
